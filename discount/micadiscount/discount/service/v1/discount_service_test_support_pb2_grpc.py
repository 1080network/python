# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
#  Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source 
#  code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and 
#  other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store, 
#  post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a 
#  valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines, 
#  products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without 
#  permission.
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from micadiscount.discount.service.v1 import discount_service_test_support_pb2 as discount_dot_service_dot_v1_dot_discount__service__test__support__pb2


class DiscountTestSupportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TestDetermineDiscount = channel.unary_unary(
                '/discount.service.v1.DiscountTestSupportService/TestDetermineDiscount',
                request_serializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountRequest.SerializeToString,
                response_deserializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountResponse.FromString,
                )
        self.TestApplyDiscount = channel.unary_unary(
                '/discount.service.v1.DiscountTestSupportService/TestApplyDiscount',
                request_serializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountRequest.SerializeToString,
                response_deserializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountResponse.FromString,
                )


class DiscountTestSupportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TestDetermineDiscount(self, request, context):
        """Determine which discount(s) can be applied to this transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestApplyDiscount(self, request, context):
        """Apply the discount(s) that were applicable to this transaction
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscountTestSupportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TestDetermineDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.TestDetermineDiscount,
                    request_deserializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountRequest.FromString,
                    response_serializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountResponse.SerializeToString,
            ),
            'TestApplyDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.TestApplyDiscount,
                    request_deserializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountRequest.FromString,
                    response_serializer=discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'discount.service.v1.DiscountTestSupportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DiscountTestSupportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TestDetermineDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/discount.service.v1.DiscountTestSupportService/TestDetermineDiscount',
            discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountRequest.SerializeToString,
            discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.DetermineDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestApplyDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/discount.service.v1.DiscountTestSupportService/TestApplyDiscount',
            discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountRequest.SerializeToString,
            discount_dot_service_dot_v1_dot_discount__service__test__support__pb2.ApplyDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
