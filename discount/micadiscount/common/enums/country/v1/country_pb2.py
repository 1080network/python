# -*- coding: utf-8 -*-
#  Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source #  code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and #  other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store, #  post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a #  valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines, #  products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without #  permission.
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/enums/country/v1/country.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%common/enums/country/v1/country.proto\x12\x17\x63ommon.enums.country.v1*2\n\x07\x43ountry\x12\x17\n\x13\x43OUNTRY_UNSPECIFIED\x10\x00\x12\x0e\n\nCOUNTRY_US\x10\x01\x42U\n\x17io.mica.common.enums.v1B\x10\x43ountryEnumProtoZ!mica/proto/common/enums/countryv1\xa2\x02\x04MICAb\x06proto3')

_COUNTRY = DESCRIPTOR.enum_types_by_name['Country']
Country = enum_type_wrapper.EnumTypeWrapper(_COUNTRY)
COUNTRY_UNSPECIFIED = 0
COUNTRY_US = 1


if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\027io.mica.common.enums.v1B\020CountryEnumProtoZ!mica/proto/common/enums/countryv1\242\002\004MICA'
  _COUNTRY._serialized_start=66
  _COUNTRY._serialized_end=116
# @@protoc_insertion_point(module_scope)
