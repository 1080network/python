# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
#  Copyright (c) 2023 Mica. All rights reserved. All software, including, without limitation, all source
#  code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
#  other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
#  post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
#  valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
#  products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
#  permission.
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from serviceprovider.mica.serviceprovider.discount.v1 import discount_pb2 as mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2
from serviceprovider.mica.serviceprovider.instrument.v1 import instrument_pb2 as mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2
from serviceprovider.mica.serviceprovider.serviceprovider.v1 import service_provider_pb2 as mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2
from serviceprovider.mica.serviceprovider.transaction.v1 import transaction_pb2 as mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2
from serviceprovider.mica.serviceprovider.user.v1 import user_pb2 as mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2
from serviceprovider.mica.serviceprovider.uuek.v1 import uuek_pb2 as mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2
from serviceprovider.mica.serviceprovider.value.v1 import value_pb2 as mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2
from serviceprovider.micashared.common.ping.v1 import ping_pb2 as micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2
from serviceprovider.micashared.common.v1 import receipt_pb2 as micashared_dot_common_dot_v1_dot_receipt__pb2


class ServiceProviderToMicaServiceStub(object):
    """The operations in this service allow the Service Provider to register their users and
    the user's instruments (accounts).  In addition there are operations to update, retrieve, search
    and delete those users and instruments. The SP can retrieve/search Organizations to retrieve
    information about them that is not passed via ValueObtain or ValueReturn. Finally the SP can
    provision it's own UUEKs which it can distribute to it's own users.
    The SP starts by authenticating themselves after which they can call the other operations in
    this service. At a minimum, the SP will need to call RegisterUser and RegisterInstrument for
    each user and instrument they want to make available for their users at mica. For both Users and
    Instruments the SP can retrieve, update and remove them.
    When mica calls the SP with either ValueObtain or ValueReturn mica will include the
    organizationKey and the specific category being used for this request. If the SP wants to get
    more information about the organization (e.g. name, all categories, and it's address) they can
    use the GetOrganization and SearchOrganization calls.
    <editor-fold desc="Service Provider Operations">
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServiceProvider = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetServiceProvider',
                request_serializer=mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderResponse.FromString,
                )
        self.RegisterUser = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RegisterUser',
                request_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserResponse.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetUser',
                request_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserResponse.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/UpdateUser',
                request_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserResponse.FromString,
                )
        self.RemoveUser = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveUser',
                request_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserResponse.FromString,
                )
        self.SearchUser = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchUser',
                request_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserResponse.FromString,
                )
        self.RegisterInstrument = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RegisterInstrument',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentResponse.FromString,
                )
        self.GetInstrument = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetInstrument',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentResponse.FromString,
                )
        self.RemoveInstrument = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveInstrument',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentResponse.FromString,
                )
        self.SearchInstrument = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchInstrument',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentResponse.FromString,
                )
        self.SetPIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SetPIN',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINResponse.FromString,
                )
        self.ResetPIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/ResetPIN',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINResponse.FromString,
                )
        self.RemovePIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemovePIN',
                request_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINResponse.FromString,
                )
        self.ProvisionServiceProviderUUEK = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/ProvisionServiceProviderUUEK',
                request_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKResponse.FromString,
                )
        self.RemoveServiceProviderUUEK = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveServiceProviderUUEK',
                request_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKResponse.FromString,
                )
        self.SearchServiceProviderUUEK = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchServiceProviderUUEK',
                request_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKResponse.FromString,
                )
        self.SendValue = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SendValue',
                request_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueResponse.FromString,
                )
        self.SearchValue = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchValue',
                request_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueResponse.FromString,
                )
        self.GetValue = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetValue',
                request_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueResponse.FromString,
                )
        self.SearchTransactionData = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionData',
                request_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataResponse.FromString,
                )
        self.SearchTransactionGeographyData = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionGeographyData',
                request_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataResponse.FromString,
                )
        self.SearchTransactionPartnerData = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionPartnerData',
                request_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataResponse.FromString,
                )
        self.SearchUserDiscount = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchUserDiscount',
                request_serializer=mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountResponse.FromString,
                )
        self.GetReceipt = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetReceipt',
                request_serializer=micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptRequest.SerializeToString,
                response_deserializer=micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptResponse.FromString,
                )
        self.Ping = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/Ping',
                request_serializer=micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingRequest.SerializeToString,
                response_deserializer=micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingResponse.FromString,
                )


class ServiceProviderToMicaServiceServicer(object):
    """The operations in this service allow the Service Provider to register their users and
    the user's instruments (accounts).  In addition there are operations to update, retrieve, search
    and delete those users and instruments. The SP can retrieve/search Organizations to retrieve
    information about them that is not passed via ValueObtain or ValueReturn. Finally the SP can
    provision it's own UUEKs which it can distribute to it's own users.
    The SP starts by authenticating themselves after which they can call the other operations in
    this service. At a minimum, the SP will need to call RegisterUser and RegisterInstrument for
    each user and instrument they want to make available for their users at mica. For both Users and
    Instruments the SP can retrieve, update and remove them.
    When mica calls the SP with either ValueObtain or ValueReturn mica will include the
    organizationKey and the specific category being used for this request. If the SP wants to get
    more information about the organization (e.g. name, all categories, and it's address) they can
    use the GetOrganization and SearchOrganization calls.
    <editor-fold desc="Service Provider Operations">
    """

    def GetServiceProvider(self, request, context):
        """Retrieves the details of the SP at mica.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterUser(self, request, context):
        """<editor-fold desc="User Operations">

        Called when the Service Provider wants to register one of their users for mica. Note that this does only the user and not the instrument (account).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Retrieve a user based on it's key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Update the User demographic data held at mica.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUser(self, request, context):
        """Remove a User from mica. Typically called when a User ends their relationship with the SP.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUser(self, request, context):
        """Searches for Users held at mica..
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterInstrument(self, request, context):
        """<editor-fold desc="Instrument Operations">

        Called to register a Users instrument (account) for use at mica. This requires a user to already have been registered.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstrument(self, request, context):
        """Retrieve an instrument based on it's key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveInstrument(self, request, context):
        """Remove an instrument (and any SP or Partner UUEKs) from mica. This renders any existing UUEKs as inoperative.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchInstrument(self, request, context):
        """Like GetInstrument, can be used to retrieve Instruments based on the criteria in the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPIN(self, request, context):
        """<editor-fold desc="PIN Operations">

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPIN(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePIN(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvisionServiceProviderUUEK(self, request, context):
        """<editor-fold desc="UUEK Operations">

        Used to create a UUEK that can be given to the SP's users in order to transact at Partners (merhants) that support mica.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveServiceProviderUUEK(self, request, context):
        """Used to remove an existing UUEK from mica rendering it inoperable.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchServiceProviderUUEK(self, request, context):
        """Searches for UUEKs by criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendValue(self, request, context):
        """<editor-fold desc="Person to Person Operations">

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchValue(self, request, context):
        """An operation to search for Value operations either Obtain or Return that the Partner has requested of mica.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTransactionData(self, request, context):
        """<editor-fold desc="Dashboard Operations">

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTransactionGeographyData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTransactionPartnerData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUserDiscount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceipt(self, request, context):
        """<editor-fold desc="Transaction Operations">

        Retrieve a transaction based on it's key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """<editor-fold desc="Admin Operations">

        An operation to ping the server to ensure it's up and running and that the connection is good.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceProviderToMicaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServiceProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceProvider,
                    request_deserializer=mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderResponse.SerializeToString,
            ),
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserResponse.SerializeToString,
            ),
            'RemoveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUser,
                    request_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserResponse.SerializeToString,
            ),
            'SearchUser': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUser,
                    request_deserializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserResponse.SerializeToString,
            ),
            'RegisterInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterInstrument,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentResponse.SerializeToString,
            ),
            'GetInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstrument,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentResponse.SerializeToString,
            ),
            'RemoveInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveInstrument,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentResponse.SerializeToString,
            ),
            'SearchInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchInstrument,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentResponse.SerializeToString,
            ),
            'SetPIN': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPIN,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINResponse.SerializeToString,
            ),
            'ResetPIN': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPIN,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINResponse.SerializeToString,
            ),
            'RemovePIN': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePIN,
                    request_deserializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINResponse.SerializeToString,
            ),
            'ProvisionServiceProviderUUEK': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvisionServiceProviderUUEK,
                    request_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKResponse.SerializeToString,
            ),
            'RemoveServiceProviderUUEK': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveServiceProviderUUEK,
                    request_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKResponse.SerializeToString,
            ),
            'SearchServiceProviderUUEK': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchServiceProviderUUEK,
                    request_deserializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKResponse.SerializeToString,
            ),
            'SendValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SendValue,
                    request_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueResponse.SerializeToString,
            ),
            'SearchValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchValue,
                    request_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueResponse.SerializeToString,
            ),
            'GetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValue,
                    request_deserializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueResponse.SerializeToString,
            ),
            'SearchTransactionData': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTransactionData,
                    request_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataResponse.SerializeToString,
            ),
            'SearchTransactionGeographyData': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTransactionGeographyData,
                    request_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataResponse.SerializeToString,
            ),
            'SearchTransactionPartnerData': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTransactionPartnerData,
                    request_deserializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataResponse.SerializeToString,
            ),
            'SearchUserDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUserDiscount,
                    request_deserializer=mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountResponse.SerializeToString,
            ),
            'GetReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceipt,
                    request_deserializer=micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptRequest.FromString,
                    response_serializer=micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingRequest.FromString,
                    response_serializer=micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mica.serviceprovider.service.v1.ServiceProviderToMicaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceProviderToMicaService(object):
    """The operations in this service allow the Service Provider to register their users and
    the user's instruments (accounts).  In addition there are operations to update, retrieve, search
    and delete those users and instruments. The SP can retrieve/search Organizations to retrieve
    information about them that is not passed via ValueObtain or ValueReturn. Finally the SP can
    provision it's own UUEKs which it can distribute to it's own users.
    The SP starts by authenticating themselves after which they can call the other operations in
    this service. At a minimum, the SP will need to call RegisterUser and RegisterInstrument for
    each user and instrument they want to make available for their users at mica. For both Users and
    Instruments the SP can retrieve, update and remove them.
    When mica calls the SP with either ValueObtain or ValueReturn mica will include the
    organizationKey and the specific category being used for this request. If the SP wants to get
    more information about the organization (e.g. name, all categories, and it's address) they can
    use the GetOrganization and SearchOrganization calls.
    <editor-fold desc="Service Provider Operations">
    """

    @staticmethod
    def GetServiceProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetServiceProvider',
            mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderRequest.SerializeToString,
            mica_dot_serviceprovider_dot_serviceprovider_dot_v1_dot_service__provider__pb2.GetServiceProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RegisterUser',
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserRequest.SerializeToString,
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RegisterUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetUser',
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserRequest.SerializeToString,
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.GetUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/UpdateUser',
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserRequest.SerializeToString,
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.UpdateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveUser',
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserRequest.SerializeToString,
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.RemoveUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchUser',
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserRequest.SerializeToString,
            mica_dot_serviceprovider_dot_user_dot_v1_dot_user__pb2.SearchUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RegisterInstrument',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RegisterInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetInstrument',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.GetInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveInstrument',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemoveInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchInstrument',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SearchInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SetPIN',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.SetPINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/ResetPIN',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.ResetPINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemovePIN',
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_instrument_dot_v1_dot_instrument__pb2.RemovePINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProvisionServiceProviderUUEK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/ProvisionServiceProviderUUEK',
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKRequest.SerializeToString,
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.ProvisionServiceProviderUUEKResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveServiceProviderUUEK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/RemoveServiceProviderUUEK',
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKRequest.SerializeToString,
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.RemoveServiceProviderUUEKResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchServiceProviderUUEK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchServiceProviderUUEK',
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKRequest.SerializeToString,
            mica_dot_serviceprovider_dot_uuek_dot_v1_dot_uuek__pb2.SearchServiceProviderUUEKResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SendValue',
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueRequest.SerializeToString,
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SendValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchValue',
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueRequest.SerializeToString,
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.SearchValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetValue',
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueRequest.SerializeToString,
            mica_dot_serviceprovider_dot_value_dot_v1_dot_value__pb2.GetValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTransactionData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionData',
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataRequest.SerializeToString,
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTransactionGeographyData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionGeographyData',
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataRequest.SerializeToString,
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionGeographyDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTransactionPartnerData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchTransactionPartnerData',
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataRequest.SerializeToString,
            mica_dot_serviceprovider_dot_transaction_dot_v1_dot_transaction__pb2.SearchTransactionPartnerDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUserDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/SearchUserDiscount',
            mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountRequest.SerializeToString,
            mica_dot_serviceprovider_dot_discount_dot_v1_dot_discount__pb2.SearchUserDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/GetReceipt',
            micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptRequest.SerializeToString,
            micashared_dot_common_dot_v1_dot_receipt__pb2.GetReceiptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaService/Ping',
            micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingRequest.SerializeToString,
            micashared_dot_common_dot_ping_dot_v1_dot_ping__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
