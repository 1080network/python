# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
#  Copyright (c) 2024 Mica. All rights reserved. All software, including, without limitation, all source
#  code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
#  other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
#  post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
#  valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
#  products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
#  permission.
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from serviceprovider.mica.serviceprovider.service.v1 import service_provider_to_mica_wip_service_pb2 as mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2


class ServiceProviderToMicaWIPServiceStub(object):
    """Service for Work In Progress or experimental operations that may become a standard product feature in the future
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetPIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SetPIN',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINResponse.FromString,
                )
        self.ValidatePIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/ValidatePIN',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINResponse.FromString,
                )
        self.ResetPIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/ResetPIN',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINResponse.FromString,
                )
        self.RemovePIN = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/RemovePIN',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINResponse.FromString,
                )
        self.GetLinkedAccountBalance = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/GetLinkedAccountBalance',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceResponse.FromString,
                )
        self.UpdateAccountEnableForPurchase = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/UpdateAccountEnableForPurchase',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseResponse.FromString,
                )
        self.SearchRecurringPayments = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SearchRecurringPayments',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsResponse.FromString,
                )
        self.SendValue = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SendValue',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueResponse.FromString,
                )
        self.SearchUserDiscount = channel.unary_unary(
                '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SearchUserDiscount',
                request_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountRequest.SerializeToString,
                response_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountResponse.FromString,
                )


class ServiceProviderToMicaWIPServiceServicer(object):
    """Service for Work In Progress or experimental operations that may become a standard product feature in the future
    """

    def SetPIN(self, request, context):
        """Set the network PIN for a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidatePIN(self, request, context):
        """Validate the network PIN for a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPIN(self, request, context):
        """Reset the network PIN for a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePIN(self, request, context):
        """Remove the network PIN for a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLinkedAccountBalance(self, request, context):
        """Retrieve the balance of a linked account (if available).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccountEnableForPurchase(self, request, context):
        """Update the enable for purchase flag for a linked account so that it will be used in a multi-tender transaction.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchRecurringPayments(self, request, context):
        """Search for recurring payments of a given user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendValue(self, request, context):
        """Send value from one user to another (P2P).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUserDiscount(self, request, context):
        """Search for discounts available to a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceProviderToMicaWIPServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetPIN': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPIN,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINResponse.SerializeToString,
            ),
            'ValidatePIN': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidatePIN,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINResponse.SerializeToString,
            ),
            'ResetPIN': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPIN,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINResponse.SerializeToString,
            ),
            'RemovePIN': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePIN,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINResponse.SerializeToString,
            ),
            'GetLinkedAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLinkedAccountBalance,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceResponse.SerializeToString,
            ),
            'UpdateAccountEnableForPurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccountEnableForPurchase,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseResponse.SerializeToString,
            ),
            'SearchRecurringPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchRecurringPayments,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsResponse.SerializeToString,
            ),
            'SendValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SendValue,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueResponse.SerializeToString,
            ),
            'SearchUserDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUserDiscount,
                    request_deserializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountRequest.FromString,
                    response_serializer=mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceProviderToMicaWIPService(object):
    """Service for Work In Progress or experimental operations that may become a standard product feature in the future
    """

    @staticmethod
    def SetPIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SetPIN',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SetPINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidatePIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/ValidatePIN',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ValidatePINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/ResetPIN',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.ResetPINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/RemovePIN',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.RemovePINResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLinkedAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/GetLinkedAccountBalance',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.GetLinkedAccountBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAccountEnableForPurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/UpdateAccountEnableForPurchase',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.UpdateAccountEnableForPurchaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchRecurringPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SearchRecurringPayments',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchRecurringPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SendValue',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SendValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUserDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mica.serviceprovider.service.v1.ServiceProviderToMicaWIPService/SearchUserDiscount',
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountRequest.SerializeToString,
            mica_dot_serviceprovider_dot_service_dot_v1_dot_service__provider__to__mica__wip__service__pb2.SearchUserDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
